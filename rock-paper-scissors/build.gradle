// This is free and unencumbered software released into the public domain.
//
// Anyone is free to copy, modify, publish, use, compile, sell, or
// distribute this software, either in source code form or as a compiled
// binary, for any purpose, commercial or non-commercial, and by any
// means.
//
// In jurisdictions that recognize copyright laws, the author or authors
// of this software dedicate any and all copyright interest in the
// software to the public domain. We make this dedication for the benefit
// of the public at large and to the detriment of our heirs and
// successors. We intend this dedication to be an overt act of
// relinquishment in perpetuity of all present and future rights to this
// software under copyright law.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
// OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//
// For more information, please refer to <http://unlicense.org/>

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jmailen.kotlinter' version '1.11.1'
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'java'

sourceCompatibility = 1.7

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.xenomachina:kotlin-argparser:$kotlin_argparser_version"
}

//////////////////////////////////////////////////////////////////////////////
// application config
//////////////////////////////////////////////////////////////////////////////

mainClassName = "app.appsoluut.rockpaperscissors.MainKt"

// This will cause the wrapper script generated by gradle to pass the program
// name in via the com.xenomachina.argparser.programName property. We use in $0
// so that the program name adapts to whatever the user is calling the script
// by, which can vary depending on how it was installed, or if the user is
// calling it with a qualified pathname or via a symlink.
//
// If you don't like this magic you can replace this entire block with:
//
//     applicationDefaultJvmArgs = ["-Dcom.xenomachina.argparser.programName=$name"]
//
// this will hard code the application name as gradle knows it into the
// start script, but it will not adapt as $0 does.
startScripts {
    def gen = unixStartScriptGenerator
    gen.template = resources.text.fromString(
            gen.template.asString().replaceFirst('(?=\nDEFAULT_JVM_OPTS=.*?\n)') {
                '\nJAVA_OPTS="\\$JAVA_OPTS "\'"-Dcom.xenomachina.argparser.programName=\\$0"\''
            })

    // TODO: do something similar for windowsStartScriptGenerator
}
